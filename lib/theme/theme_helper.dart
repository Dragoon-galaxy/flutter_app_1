import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(9.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 4,
        space: 4,
        color: appTheme.black900.withOpacity(0.53),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.deepPurple900,
          fontSize: 16.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray800,
          fontSize: 14.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: Color(0XFF11B5CC),
          fontSize: 36.fSize,
          fontFamily: 'Koulen',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: Color(0XFFFFFFFF),
          fontSize: 32.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.lightBlueA200,
          fontSize: 24.fSize,
          fontFamily: 'Koulen',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 11.fSize,
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: Color(0XFF000000),
          fontSize: 20.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: Color(0X7A000000),
          fontSize: 17.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.cyanA70001,
          fontSize: 15.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF1E65BF),
    primaryContainer: Color(0XFF13142E),

    // Error colors
    errorContainer: Color(0XFF1559CD),
    onError: Color(0XFF787878),

    // On colors(text colors)
    onPrimary: Color(0X26151313),
    onPrimaryContainer: Color(0XFF11B3CB),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue800 => Color(0XFF1E4ABB);
  Color get blue80001 => Color(0XFF1D50BC);
  Color get blue80002 => Color(0XFF1E4EBB);
  Color get blue80003 => Color(0XFF1567CD);
  Color get blue900 => Color(0XFF1920CF);

  // BlueGray
  Color get blueGray50 => Color(0XFFEAECF0);

  // Cyan
  Color get cyan100 => Color(0XFFB1E6EE);
  Color get cyan400 => Color(0XFF1DB9CE);
  Color get cyanA700 => Color(0XFF11B6CC);
  Color get cyanA70001 => Color(0XFF11B5CC);

  // DeepPurple
  Color get deepPurple900 => Color(0XFF1A17A1);
  Color get deepPurpleA700 => Color(0XFF4A09D2);

  // Gray
  Color get gray200 => Color(0XFFEEEEEE);
  Color get gray300 => Color(0XFFE2E2E2);
  Color get gray40096 => Color(0X96C4C4C4);
  Color get gray50 => Color(0XFFFCF9F9);
  Color get gray800 => Color(0XFF464646);
  Color get gray900 => Color(0XFF1E1E1E);

  // Indigo
  Color get indigo900 => Color(0XFF001B5A);

  // LightBlue
  Color get lightBlue700 => Color(0XFF1389CC);
  Color get lightBlueA200 => Color(0XFF44CDF8);

  // Red
  Color get red500 => Color(0XFFEB4335);

  // Teal
  Color get teal900 => Color(0XFF003445);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow600 => Color(0XFFFFD233);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
